#ifndef UTILS_H
#define UTILS_H

#include <signal.h>
#include <stddef.h>
#include <stdio.h>

#include "connections.h"

/**
 * @brief Signal handler for SIGUSR1.
 * 
 * This function handles the SIGUSR1 signal. It is intended to be used as a
 * signal handler function.
 */
void handle_sigusr1();

/**
 * @brief Signal handler for SIGINT.
 * 
 * This function handles the SIGINT signal (typically generated by pressing
 * Ctrl+C). It is intended to be used as a signal handler function.
 */
void handle_sigint();

/**
 * @brief Thread function to manage SIGUSR1 signal handling.
 * 
 * This function runs in a separate thread and manages the handling of the
 * SIGUSR1 signal. It is intended to be used as the entry point for a thread.
 * 
 * @return void* A pointer to the thread's return value.
 */
void* sigusr1_handler_manager();

/**
 * @brief Setup signal handlers for SIGUSR1 and SIGINT.
 * 
 * This function sets up the signal handlers for the SIGUSR1 and SIGINT signals.
 * It should be called during the initialization phase of the program.
 */
void setup_signals();

/**
 * @brief Setup client worker threads.
 * 
 * This function initializes and starts the client worker threads. It should be
 * called during the initialization phase of the program.
 * 
 * @return int Returns 0 on success, or a negative error code on failure.
 */
int setup_client_workers();

/**
 * @brief Setup server FIFO listener thread.
 * 
 * This function initializes and starts the server FIFO listener thread. It
 * should be called during the initialization phase of the program.
 * 
 * @param server_fifo_path The path to the server FIFO.
 * @return int Returns 0 on success, or a negative error code on failure.
 */
int setup_server_fifo(char* server_fifo_path);

/**
 * @brief Cleanup resources and exit the program.
 *
 * This function is responsible for cleaning up resources such as memory,
 * file descriptors, and other allocated resources before exiting the program.
 * It should be called during the shutdown phase of the program to ensure
 * proper cleanup.
 *
 * @param exit_code The exit code to be returned by the program.
 */
void cleanup_and_exit(int exit_code);

#endif // UTILS_H